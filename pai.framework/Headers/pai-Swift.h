#ifndef TARGET_OS_SIMULATOR
#include <TargetConditionals.h>
#endif
#if TARGET_OS_SIMULATOR
#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="pai",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@class NSCoder;

/// A background view that messages can use for rounding all or a subset of corners with squircles
/// (the smoother method of rounding corners that you see on app icons).
SWIFT_CLASS("_TtC3pai18CornerRoundingView")
@interface CornerRoundingView : UIView
/// Specifies the corner radius to use.
@property (nonatomic) CGFloat cornerRadius;
/// Set to <code>true</code> for layouts where only the leading corners should be
/// rounded. For example, the layout in TabView.xib rounds the bottom corners
/// when displayed from the top and the top corners when displayed from the bottom.
/// When this property is <code>true</code>, the <code>roundedCorners</code> property will be overwritten
/// by relevant animators (e.g. <code>TopBottomAnimation</code>).
@property (nonatomic) BOOL roundsLeadingCorners;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end




SWIFT_CLASS("_TtC3pai9PNChannel")
@interface PNChannel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC3pai14PNInboxMessage")
@interface PNInboxMessage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pushId;
@property (nonatomic, readonly, copy) NSString * _Nonnull customerId;
@property (nonatomic, readonly, copy) NSDate * _Nullable receivedTime;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable payload;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable body;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiryDate;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable extra;
@property (nonatomic, readonly, copy) NSString * _Nullable imageURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isUnread SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDeleted SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isRead SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum PNSDKMode : NSInteger;

SWIFT_CLASS("_TtC3pai21PNNotificationManager")
@interface PNNotificationManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (PNNotificationManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Initiate the Notification SDK
/// \param appGroupName App group name which is same for app and notification SDK.
///
/// \param clientId Client ID provided by the SDK.
///
/// \param key Hmac key provided to use SDK.
///
/// \param loggedInUserId Logged in user ID. If there is no user logged in then pass nil instead of empty String
///
/// \param firebaseConfigFile If there are more firebase configuration plist files than pass their name.
///
/// \param isStaging Is the module in staging mode
///
/// \param sdkMode Defines that login of user is handled by server or client(SDK)
///
/// \param configEndPoint Use this parameter to pass the custom URL to fetch remote config. If not given, it will use default end points.
///
- (void)startWithAppGroupName:(NSString * _Nonnull)appGroupName clientId:(NSString * _Nonnull)clientId key:(NSString * _Nonnull)key loggedInUserId:(NSString * _Nullable)loggedInUserId firebaseConfigFile:(NSString * _Nullable)firebaseConfigFile isStaging:(BOOL)isStaging sdkMode:(enum PNSDKMode)sdkMode configEndPoint:(NSString * _Nullable)configEndPoint;
- (void)deleteConfigWithCompletion:(void (^ _Nullable)(BOOL))completion;
- (void)checkBuildStatusWithIsStaging:(BOOL)isStaging completion:(void (^ _Nullable)(BOOL))completion;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSString * _Nullable)getFCMToken SWIFT_WARN_UNUSED_RESULT;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (PNChannel * _Nullable)getChannel SWIFT_WARN_UNUSED_RESULT;
@end










@interface PNNotificationManager (SWIFT_EXTENSION(pai))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull inboxListUpdatedNotification;)
+ (NSString * _Nonnull)inboxListUpdatedNotification SWIFT_WARN_UNUSED_RESULT;
@end

@class UIApplication;
@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)application:(UIApplication * _Nullable)application receiveRemoteNotification:(NSDictionary * _Nullable)userInfo handler:(void (^ _Nullable)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end

@class PNUser;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
/// Registers user with FCM token on server
/// \param user User object.
///
- (void)loginWithUser:(NSString * _Nonnull)user;
/// Deregisters token with user on server.
- (void)logout;
- (BOOL)isUserIdAvailable SWIFT_WARN_UNUSED_RESULT;
- (void)requiresUpdateWithUser:(PNUser * _Nonnull)user;
@end




@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSArray<PNInboxMessage *> * _Nonnull)fetchInboxMessages SWIFT_WARN_UNUSED_RESULT;
- (void)syncInboxMessages;
- (void)markMessagesReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)markMessagesUnReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)deleteWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)didClickedWithMessage:(PNInboxMessage * _Nonnull)message initiateDeepLink:(BOOL)initiateDeepLink;
- (void)messageDisplayedWithMessage:(PNInboxMessage * _Nonnull)message;
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC3pai30PNNotificationServiceExtension")
@interface PNNotificationServiceExtension : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PNSDKMode, open) {
  PNSDKModeServerLogin = 1,
  PNSDKModeClientLogin = 2,
};


SWIFT_CLASS("_TtC3pai19PNSignalBaseSession")
@interface PNSignalBaseSession : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai21PNSignalConfiguration")
@interface PNSignalConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai16PNSignalConstant")
@interface PNSignalConstant : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai18PNSignalDispatcher")
@interface PNSignalDispatcher : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull eventSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)eventSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull pushSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)pushSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface PNSignalDispatcher (SWIFT_EXTENSION(pai))
- (void)dispatch;
@end




SWIFT_CLASS("_TtC3pai11PNSignalLog")
@interface PNSignalLog : NSObject <NSCoding>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai15PNSignalSession")
@interface PNSignalSession : PNSignalBaseSession
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC3pai6PNUser")
@interface PNUser : NSObject
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId ssoToken:(NSString * _Nonnull)ssoToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="pai",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@class NSCoder;

/// A background view that messages can use for rounding all or a subset of corners with squircles
/// (the smoother method of rounding corners that you see on app icons).
SWIFT_CLASS("_TtC3pai18CornerRoundingView")
@interface CornerRoundingView : UIView
/// Specifies the corner radius to use.
@property (nonatomic) CGFloat cornerRadius;
/// Set to <code>true</code> for layouts where only the leading corners should be
/// rounded. For example, the layout in TabView.xib rounds the bottom corners
/// when displayed from the top and the top corners when displayed from the bottom.
/// When this property is <code>true</code>, the <code>roundedCorners</code> property will be overwritten
/// by relevant animators (e.g. <code>TopBottomAnimation</code>).
@property (nonatomic) BOOL roundsLeadingCorners;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end




SWIFT_CLASS("_TtC3pai9PNChannel")
@interface PNChannel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC3pai14PNInboxMessage")
@interface PNInboxMessage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pushId;
@property (nonatomic, readonly, copy) NSString * _Nonnull customerId;
@property (nonatomic, readonly, copy) NSDate * _Nullable receivedTime;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable payload;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable body;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiryDate;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable extra;
@property (nonatomic, readonly, copy) NSString * _Nullable imageURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isUnread SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDeleted SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isRead SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum PNSDKMode : NSInteger;

SWIFT_CLASS("_TtC3pai21PNNotificationManager")
@interface PNNotificationManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (PNNotificationManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Initiate the Notification SDK
/// \param appGroupName App group name which is same for app and notification SDK.
///
/// \param clientId Client ID provided by the SDK.
///
/// \param key Hmac key provided to use SDK.
///
/// \param loggedInUserId Logged in user ID. If there is no user logged in then pass nil instead of empty String
///
/// \param firebaseConfigFile If there are more firebase configuration plist files than pass their name.
///
/// \param isStaging Is the module in staging mode
///
/// \param sdkMode Defines that login of user is handled by server or client(SDK)
///
/// \param configEndPoint Use this parameter to pass the custom URL to fetch remote config. If not given, it will use default end points.
///
- (void)startWithAppGroupName:(NSString * _Nonnull)appGroupName clientId:(NSString * _Nonnull)clientId key:(NSString * _Nonnull)key loggedInUserId:(NSString * _Nullable)loggedInUserId firebaseConfigFile:(NSString * _Nullable)firebaseConfigFile isStaging:(BOOL)isStaging sdkMode:(enum PNSDKMode)sdkMode configEndPoint:(NSString * _Nullable)configEndPoint;
- (void)deleteConfigWithCompletion:(void (^ _Nullable)(BOOL))completion;
- (void)checkBuildStatusWithIsStaging:(BOOL)isStaging completion:(void (^ _Nullable)(BOOL))completion;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSString * _Nullable)getFCMToken SWIFT_WARN_UNUSED_RESULT;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (PNChannel * _Nullable)getChannel SWIFT_WARN_UNUSED_RESULT;
@end










@interface PNNotificationManager (SWIFT_EXTENSION(pai))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull inboxListUpdatedNotification;)
+ (NSString * _Nonnull)inboxListUpdatedNotification SWIFT_WARN_UNUSED_RESULT;
@end

@class UIApplication;
@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)application:(UIApplication * _Nullable)application receiveRemoteNotification:(NSDictionary * _Nullable)userInfo handler:(void (^ _Nullable)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end

@class PNUser;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
/// Registers user with FCM token on server
/// \param user User object.
///
- (void)loginWithUser:(NSString * _Nonnull)user;
/// Deregisters token with user on server.
- (void)logout;
- (BOOL)isUserIdAvailable SWIFT_WARN_UNUSED_RESULT;
- (void)requiresUpdateWithUser:(PNUser * _Nonnull)user;
@end




@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSArray<PNInboxMessage *> * _Nonnull)fetchInboxMessages SWIFT_WARN_UNUSED_RESULT;
- (void)syncInboxMessages;
- (void)markMessagesReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)markMessagesUnReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)deleteWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)didClickedWithMessage:(PNInboxMessage * _Nonnull)message initiateDeepLink:(BOOL)initiateDeepLink;
- (void)messageDisplayedWithMessage:(PNInboxMessage * _Nonnull)message;
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC3pai30PNNotificationServiceExtension")
@interface PNNotificationServiceExtension : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PNSDKMode, open) {
  PNSDKModeServerLogin = 1,
  PNSDKModeClientLogin = 2,
};


SWIFT_CLASS("_TtC3pai19PNSignalBaseSession")
@interface PNSignalBaseSession : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai21PNSignalConfiguration")
@interface PNSignalConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai16PNSignalConstant")
@interface PNSignalConstant : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai18PNSignalDispatcher")
@interface PNSignalDispatcher : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull eventSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)eventSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull pushSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)pushSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface PNSignalDispatcher (SWIFT_EXTENSION(pai))
- (void)dispatch;
@end




SWIFT_CLASS("_TtC3pai11PNSignalLog")
@interface PNSignalLog : NSObject <NSCoding>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai15PNSignalSession")
@interface PNSignalSession : PNSignalBaseSession
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC3pai6PNUser")
@interface PNUser : NSObject
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId ssoToken:(NSString * _Nonnull)ssoToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif

#else
#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="pai",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@class NSCoder;

/// A background view that messages can use for rounding all or a subset of corners with squircles
/// (the smoother method of rounding corners that you see on app icons).
SWIFT_CLASS("_TtC3pai18CornerRoundingView")
@interface CornerRoundingView : UIView
/// Specifies the corner radius to use.
@property (nonatomic) CGFloat cornerRadius;
/// Set to <code>true</code> for layouts where only the leading corners should be
/// rounded. For example, the layout in TabView.xib rounds the bottom corners
/// when displayed from the top and the top corners when displayed from the bottom.
/// When this property is <code>true</code>, the <code>roundedCorners</code> property will be overwritten
/// by relevant animators (e.g. <code>TopBottomAnimation</code>).
@property (nonatomic) BOOL roundsLeadingCorners;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end




SWIFT_CLASS("_TtC3pai9PNChannel")
@interface PNChannel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC3pai14PNInboxMessage")
@interface PNInboxMessage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pushId;
@property (nonatomic, readonly, copy) NSString * _Nonnull customerId;
@property (nonatomic, readonly, copy) NSDate * _Nullable receivedTime;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable payload;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable body;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiryDate;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable extra;
@property (nonatomic, readonly, copy) NSString * _Nullable imageURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isUnread SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDeleted SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isRead SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum PNSDKMode : NSInteger;

SWIFT_CLASS("_TtC3pai21PNNotificationManager")
@interface PNNotificationManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (PNNotificationManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Initiate the Notification SDK
/// \param appGroupName App group name which is same for app and notification SDK.
///
/// \param clientId Client ID provided by the SDK.
///
/// \param key Hmac key provided to use SDK.
///
/// \param loggedInUserId Logged in user ID. If there is no user logged in then pass nil instead of empty String
///
/// \param firebaseConfigFile If there are more firebase configuration plist files than pass their name.
///
/// \param isStaging Is the module in staging mode
///
/// \param sdkMode Defines that login of user is handled by server or client(SDK)
///
/// \param configEndPoint Use this parameter to pass the custom URL to fetch remote config. If not given, it will use default end points.
///
- (void)startWithAppGroupName:(NSString * _Nonnull)appGroupName clientId:(NSString * _Nonnull)clientId key:(NSString * _Nonnull)key loggedInUserId:(NSString * _Nullable)loggedInUserId firebaseConfigFile:(NSString * _Nullable)firebaseConfigFile isStaging:(BOOL)isStaging sdkMode:(enum PNSDKMode)sdkMode configEndPoint:(NSString * _Nullable)configEndPoint;
- (void)deleteConfigWithCompletion:(void (^ _Nullable)(BOOL))completion;
- (void)checkBuildStatusWithIsStaging:(BOOL)isStaging completion:(void (^ _Nullable)(BOOL))completion;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSString * _Nullable)getFCMToken SWIFT_WARN_UNUSED_RESULT;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (PNChannel * _Nullable)getChannel SWIFT_WARN_UNUSED_RESULT;
@end










@interface PNNotificationManager (SWIFT_EXTENSION(pai))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull inboxListUpdatedNotification;)
+ (NSString * _Nonnull)inboxListUpdatedNotification SWIFT_WARN_UNUSED_RESULT;
@end

@class UIApplication;
@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)application:(UIApplication * _Nullable)application receiveRemoteNotification:(NSDictionary * _Nullable)userInfo handler:(void (^ _Nullable)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end

@class PNUser;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
/// Registers user with FCM token on server
/// \param user User object.
///
- (void)loginWithUser:(NSString * _Nonnull)user;
/// Deregisters token with user on server.
- (void)logout;
- (BOOL)isUserIdAvailable SWIFT_WARN_UNUSED_RESULT;
- (void)requiresUpdateWithUser:(PNUser * _Nonnull)user;
@end




@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSArray<PNInboxMessage *> * _Nonnull)fetchInboxMessages SWIFT_WARN_UNUSED_RESULT;
- (void)syncInboxMessages;
- (void)markMessagesReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)markMessagesUnReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)deleteWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)didClickedWithMessage:(PNInboxMessage * _Nonnull)message initiateDeepLink:(BOOL)initiateDeepLink;
- (void)messageDisplayedWithMessage:(PNInboxMessage * _Nonnull)message;
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC3pai30PNNotificationServiceExtension")
@interface PNNotificationServiceExtension : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PNSDKMode, open) {
  PNSDKModeServerLogin = 1,
  PNSDKModeClientLogin = 2,
};


SWIFT_CLASS("_TtC3pai19PNSignalBaseSession")
@interface PNSignalBaseSession : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai21PNSignalConfiguration")
@interface PNSignalConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai16PNSignalConstant")
@interface PNSignalConstant : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai18PNSignalDispatcher")
@interface PNSignalDispatcher : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull eventSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)eventSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull pushSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)pushSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface PNSignalDispatcher (SWIFT_EXTENSION(pai))
- (void)dispatch;
@end




SWIFT_CLASS("_TtC3pai11PNSignalLog")
@interface PNSignalLog : NSObject <NSCoding>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai15PNSignalSession")
@interface PNSignalSession : PNSignalBaseSession
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC3pai6PNUser")
@interface PNUser : NSObject
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId ssoToken:(NSString * _Nonnull)ssoToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="pai",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@class NSCoder;

/// A background view that messages can use for rounding all or a subset of corners with squircles
/// (the smoother method of rounding corners that you see on app icons).
SWIFT_CLASS("_TtC3pai18CornerRoundingView")
@interface CornerRoundingView : UIView
/// Specifies the corner radius to use.
@property (nonatomic) CGFloat cornerRadius;
/// Set to <code>true</code> for layouts where only the leading corners should be
/// rounded. For example, the layout in TabView.xib rounds the bottom corners
/// when displayed from the top and the top corners when displayed from the bottom.
/// When this property is <code>true</code>, the <code>roundedCorners</code> property will be overwritten
/// by relevant animators (e.g. <code>TopBottomAnimation</code>).
@property (nonatomic) BOOL roundsLeadingCorners;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end




SWIFT_CLASS("_TtC3pai9PNChannel")
@interface PNChannel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC3pai14PNInboxMessage")
@interface PNInboxMessage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pushId;
@property (nonatomic, readonly, copy) NSString * _Nonnull customerId;
@property (nonatomic, readonly, copy) NSDate * _Nullable receivedTime;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable payload;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable body;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiryDate;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable extra;
@property (nonatomic, readonly, copy) NSString * _Nullable imageURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isUnread SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDeleted SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isRead SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum PNSDKMode : NSInteger;

SWIFT_CLASS("_TtC3pai21PNNotificationManager")
@interface PNNotificationManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (PNNotificationManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Initiate the Notification SDK
/// \param appGroupName App group name which is same for app and notification SDK.
///
/// \param clientId Client ID provided by the SDK.
///
/// \param key Hmac key provided to use SDK.
///
/// \param loggedInUserId Logged in user ID. If there is no user logged in then pass nil instead of empty String
///
/// \param firebaseConfigFile If there are more firebase configuration plist files than pass their name.
///
/// \param isStaging Is the module in staging mode
///
/// \param sdkMode Defines that login of user is handled by server or client(SDK)
///
/// \param configEndPoint Use this parameter to pass the custom URL to fetch remote config. If not given, it will use default end points.
///
- (void)startWithAppGroupName:(NSString * _Nonnull)appGroupName clientId:(NSString * _Nonnull)clientId key:(NSString * _Nonnull)key loggedInUserId:(NSString * _Nullable)loggedInUserId firebaseConfigFile:(NSString * _Nullable)firebaseConfigFile isStaging:(BOOL)isStaging sdkMode:(enum PNSDKMode)sdkMode configEndPoint:(NSString * _Nullable)configEndPoint;
- (void)deleteConfigWithCompletion:(void (^ _Nullable)(BOOL))completion;
- (void)checkBuildStatusWithIsStaging:(BOOL)isStaging completion:(void (^ _Nullable)(BOOL))completion;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSString * _Nullable)getFCMToken SWIFT_WARN_UNUSED_RESULT;
@end


@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (PNChannel * _Nullable)getChannel SWIFT_WARN_UNUSED_RESULT;
@end










@interface PNNotificationManager (SWIFT_EXTENSION(pai))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull inboxListUpdatedNotification;)
+ (NSString * _Nonnull)inboxListUpdatedNotification SWIFT_WARN_UNUSED_RESULT;
@end

@class UIApplication;
@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)application:(UIApplication * _Nullable)application receiveRemoteNotification:(NSDictionary * _Nullable)userInfo handler:(void (^ _Nullable)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end

@class PNUser;

@interface PNNotificationManager (SWIFT_EXTENSION(pai))
/// Registers user with FCM token on server
/// \param user User object.
///
- (void)loginWithUser:(NSString * _Nonnull)user;
/// Deregisters token with user on server.
- (void)logout;
- (BOOL)isUserIdAvailable SWIFT_WARN_UNUSED_RESULT;
- (void)requiresUpdateWithUser:(PNUser * _Nonnull)user;
@end




@interface PNNotificationManager (SWIFT_EXTENSION(pai))
- (NSArray<PNInboxMessage *> * _Nonnull)fetchInboxMessages SWIFT_WARN_UNUSED_RESULT;
- (void)syncInboxMessages;
- (void)markMessagesReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)markMessagesUnReadWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)deleteWithInboxMessages:(NSArray<PNInboxMessage *> * _Nonnull)inboxMessages completion:(void (^ _Nullable)(BOOL))completion;
- (void)didClickedWithMessage:(PNInboxMessage * _Nonnull)message initiateDeepLink:(BOOL)initiateDeepLink;
- (void)messageDisplayedWithMessage:(PNInboxMessage * _Nonnull)message;
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC3pai30PNNotificationServiceExtension")
@interface PNNotificationServiceExtension : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PNSDKMode, open) {
  PNSDKModeServerLogin = 1,
  PNSDKModeClientLogin = 2,
};


SWIFT_CLASS("_TtC3pai19PNSignalBaseSession")
@interface PNSignalBaseSession : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai21PNSignalConfiguration")
@interface PNSignalConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai16PNSignalConstant")
@interface PNSignalConstant : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai18PNSignalDispatcher")
@interface PNSignalDispatcher : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull eventSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)eventSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PNSignalDispatcher * _Nonnull pushSharedDispatcher;)
+ (PNSignalDispatcher * _Nonnull)pushSharedDispatcher SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface PNSignalDispatcher (SWIFT_EXTENSION(pai))
- (void)dispatch;
@end




SWIFT_CLASS("_TtC3pai11PNSignalLog")
@interface PNSignalLog : NSObject <NSCoding>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC3pai15PNSignalSession")
@interface PNSignalSession : PNSignalBaseSession
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC3pai6PNUser")
@interface PNUser : NSObject
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId ssoToken:(NSString * _Nonnull)ssoToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif

#endif
